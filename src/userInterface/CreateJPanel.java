/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface;

import backEnd.Employee;
import backEnd.EmployeeHistory;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;


/**
 *
 * @author sunilrudrakumar
 */
public class CreateJPanel extends javax.swing.JPanel {

     
     

    /**
     * Creates new form CreateJPanel
     */
        
        EmployeeHistory history;
        public CreateJPanel(EmployeeHistory history) {
        initComponents();
        this.history = history;
        txtFileName.setVisible(false);
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblEmployeeId = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeamInfo = new javax.swing.JLabel();
        lblPositionTitle = new javax.swing.JLabel();
        lblCellPhoneNumber = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmployeeId = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        txtTeamInfo = new javax.swing.JTextField();
        txtPositionTitle = new javax.swing.JTextField();
        txtCellPhoneNumber = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();
        lblImageIcon = new javax.swing.JLabel();
        comboGender = new javax.swing.JComboBox<>();
        lblContactInfo = new javax.swing.JLabel();
        txtFileName = new javax.swing.JTextField();

        setBackground(new java.awt.Color(99, 10, 153));
        setMaximumSize(new java.awt.Dimension(704, 546));
        setMinimumSize(new java.awt.Dimension(704, 546));
        setPreferredSize(new java.awt.Dimension(704, 546));

        Title.setBackground(new java.awt.Color(0, 0, 204));
        Title.setFont(new java.awt.Font("Academy Engraved LET", 3, 24)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Enter Employee Details");

        lblName.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblName.setText("Name");

        lblEmployeeId.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblEmployeeId.setText("Employee ID");

        lblAge.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblAge.setText("Age");

        lblGender.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblGender.setText("Gender");

        lblStartDate.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblStartDate.setText("Start Date");

        lblLevel.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblLevel.setText("Level");

        lblTeamInfo.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblTeamInfo.setText("Team Info");

        lblPositionTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblPositionTitle.setText("Position Title");

        lblCellPhoneNumber.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblCellPhoneNumber.setText("Cell Phone Number");

        lblEmail.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblEmail.setText("Email Address");

        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });

        txtCellPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCellPhoneNumberKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCellPhoneNumberKeyReleased(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(54, 33, 89));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpload.setBackground(new java.awt.Color(54, 33, 89));
        btnUpload.setText("Upload Image");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        lblImageIcon.setBackground(new java.awt.Color(99, 10, 153));

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female", "Other" }));

        lblContactInfo.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        lblContactInfo.setText("Contact Information");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblCellPhoneNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lblEmail)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName)
                                    .addComponent(lblAge)
                                    .addComponent(lblStartDate))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(lblLevel))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmployeeId)
                                    .addComponent(lblGender)
                                    .addComponent(lblTeamInfo))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblPositionTitle))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(lblImageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(btnSave))
                    .addComponent(lblContactInfo))
                .addContainerGap(45, Short.MAX_VALUE))
            .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboGender, txtAge, txtCellPhoneNumber, txtEmail, txtEmployeeId, txtLevel, txtName, txtPositionTitle, txtStartDate, txtTeamInfo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Title)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addGap(24, 24, 24)
                        .addComponent(lblAge)
                        .addGap(24, 24, 24)
                        .addComponent(lblStartDate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblEmployeeId)
                        .addGap(23, 23, 23)
                        .addComponent(lblGender)
                        .addGap(23, 23, 23)
                        .addComponent(lblTeamInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtEmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblImageIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblLevel))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPositionTitle))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpload))))
                .addGap(27, 27, 27)
                .addComponent(lblContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCellPhoneNumber)
                    .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61)
                .addComponent(btnSave)
                .addContainerGap(137, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
            try {
                // TODO add your handling code here:
                int flag = 0;
                
                //*************************************** Validation of Empty Name Field ***************************************//
                if(txtName.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Name cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                    
                    
                }
                
                //*************************************** Validation of Empty Employee ID Field ***************************************//
                if(txtEmployeeId.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Employee ID cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                    
                }
                //*************************************** Validation of Empty Age Field ***************************************//
                if(txtAge.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Age cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                }
                //*************************************** Validation of Empty StartDate Field ***************************************//
                if(txtStartDate.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Start Date cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                }
                //*************************************** Validation of Empty Level Field ***************************************//
                if(txtLevel.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Level cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                    
                }
                //*************************************** Validation of Empty TeamInfo Field ***************************************//
                if(txtTeamInfo.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Team Info cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                }
                //*************************************** Validation of Empty PositionTitle Field ***************************************//
                if(txtPositionTitle.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane("Position Title cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                }
                //*************************************** Validation of Empty PhoneNumber Field ***************************************//
                if(txtCellPhoneNumber.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane(" Cell Phone Number cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                    txtCellPhoneNumber.setText("");
                }
                //*************************************** Validation of Empty Email Field ***************************************//
                
                if(txtEmail.getText().isEmpty()){
                    JOptionPane optionPane = new JOptionPane(" Email cannot be empty", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                    txtEmail.setText("");
                }
                //***************************************Validation of EmailAddress ***************************************//
                
                String email1 = txtEmail.getText();
                Pattern pattern1 = Pattern.compile("^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$");
                Matcher matcher1 = pattern1.matcher(email1);
                if(!matcher1.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Email Address!");
                    flag = 1;
                    txtEmail.setText("");
                    
                }
                
                //***************************************Validation of Gender ***************************************//
                
                if(comboGender.getSelectedItem().toString().isEmpty() || comboGender.getSelectedItem().toString() == "Select Gender" ){
                    JOptionPane optionPane = new JOptionPane("Please choose the gender", JOptionPane.ERROR_MESSAGE);
                    JDialog dialog = optionPane.createDialog("Error Message");
                    dialog.setAlwaysOnTop(true);
                    dialog.setVisible(true);
                    flag = 1;
                }
                
                
                //***************************************Validation of EmployeeID Format ***************************************//
                String employeeId2 = txtEmployeeId.getText();
                Pattern pattern2 = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher2 =pattern2.matcher(employeeId2);
                if(!matcher2.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a Valid Employee ID!");
                    flag = 1;
                    txtEmployeeId.setText("");
                    
                    
                    
                }
                
                //*************************************** Validation of CellPhoneNumber ***************************************//
                
                String cellPhoneNumber3 = txtCellPhoneNumber.getText();
                Pattern pattern3 = Pattern.compile("^[0-9]{10}$");
                Matcher matcher3 = pattern3.matcher(cellPhoneNumber3);
                if(!matcher3.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Cell Phone Number!");
                    flag = 1;
                    txtCellPhoneNumber.setText("");
                    
                    
                }
                
                //*************************************** Validation of Level ***************************************//
                
                String level4 = txtLevel.getText();
                Pattern pattern4 = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher4 = pattern4.matcher(level4);
                if(!matcher4.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Level!");
                    flag = 1;
                    txtLevel.setText("");
                    
                }
                
                //*************************************** Validation of TeamInfo ***************************************//
                
                String teamInfo5 = txtTeamInfo.getText();
                Pattern pattern5 = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher5 = pattern5.matcher(teamInfo5);
                if(!matcher5.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Team Info!");
                    flag = 1;
                    txtTeamInfo.setText("");
                    
                    
                }
                //************************************* Validation of PositionTitle ***************************************//
                
                String positionTitle6 = txtPositionTitle.getText();
                Pattern pattern6 = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher6 = pattern6.matcher(positionTitle6);
                if(!matcher6.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Position Title!");
                    flag = 1;
                    txtPositionTitle.setText("");
                    
                }
                
                //***************************************Validation of Name ***************************************//
                
                String name7 = txtName.getText();
                Pattern pattern7 = Pattern.compile("^[a-zA-Z0-9- ]{1,50}$");
                Matcher matcher7 = pattern7.matcher(name7);
                if(!matcher7.matches())
                {
                    JOptionPane.showMessageDialog(this,"Enter a valid Name!");
                    flag = 1;
                    txtName.setText("");
                    
                }
                

                
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");
                try{
                    formatter.parse(txtStartDate.getText());

                } 
                catch(Exception e){
                     JOptionPane.showMessageDialog(this,"Please enter valid date format (MM/dd/yyyy)");
                     txtStartDate.setText("");
                }
                
                
                
                
                //**********************************************************************************************//
               SimpleDateFormat newdate = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
                SimpleDateFormat formatter1 = new SimpleDateFormat("MM/dd/yyyy",Locale.ENGLISH);
                
                String name = txtName.getText();
                String employeeId = txtEmployeeId.getText();
                int age = Integer.parseInt(txtAge.getText());
                String gender = comboGender.getSelectedItem().toString();
                Date startDate = formatter1.parse(txtStartDate.getText());
                String level = txtLevel.getText();
                String teamInfo = txtTeamInfo.getText();
                String positionTitle = txtPositionTitle.getText();
                long cellPhoneNumber = Integer.parseInt(txtCellPhoneNumber.getText());
                String email = txtEmail.getText();
                String image = txtFileName.getText();
                Employee eh = history.addNewEmployee();
                
                 //**********************************************************************************************//
                if(flag == 0){
                    eh.setName(name);
                    eh.setEmployeeId(employeeId);
                    eh.setAge(age);
                    eh.setGender(gender);
                    eh.setStartDate(startDate);
                    eh.setLevel(level);
                    eh.setPositionTitle(positionTitle);
                    eh.setTeamInfo(teamInfo);
                    eh.setCellPhoneNumber(cellPhoneNumber);
                    eh.setEmail(email);
                    eh.setImage(image);

                    JOptionPane.showMessageDialog(this,"Employee details Added Successfullly");

                    txtName.setText("");
                    txtEmployeeId.setText("");
                    txtAge.setText("");
                    txtStartDate.setText("");
                    txtLevel.setText("");
                    txtTeamInfo.setText("");
                    txtPositionTitle.setText("");
                    txtEmail.setText("");
                    txtCellPhoneNumber.setText("");
                    lblImageIcon.setText("");
                    txtFileName.setText("");
                    comboGender.setSelectedItem("Select Gender");
                    lblImageIcon.setVisible(false);


            }     
            
            } 
            
            catch (ParseException ex) {
                java.util.logging.Logger.getLogger(CreateJPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
 
    }//GEN-LAST:event_btnSaveActionPerformed
//*************************************** Getting Image  ***************************************//  
    
    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        lblImageIcon.setVisible(true);
        JFileChooser file=new JFileChooser();
        file.showOpenDialog(null);
        File f = file.getSelectedFile();
        String fileName = f.getAbsolutePath();
        ImageIcon icon = new ImageIcon(fileName);
        Image image  = icon.getImage().getScaledInstance(lblImageIcon.getWidth(),lblImageIcon.getHeight(),Image.SCALE_SMOOTH);
        lblImageIcon.setIcon(icon);
        txtFileName.setText(fileName);
    }//GEN-LAST:event_btnUploadActionPerformed
    
    
    
//*************************************** Validation of Age ***************************************// 
    
    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
        String c = txtAge.getText();
        Pattern p2=Pattern.compile("^[0-9]{1,2}$");
        Matcher m2=p2.matcher(c);
        if(!m2.matches())
        {
            JOptionPane.showMessageDialog(this,"Enter a Valid Age!");
            txtAge.setText("");
        }
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtCellPhoneNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCellPhoneNumberKeyReleased
 
        
    }//GEN-LAST:event_txtCellPhoneNumberKeyReleased

    private void txtCellPhoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCellPhoneNumberKeyPressed
        // TODO add your handling code here:String phoneNumber = txtContactNumber.getText();
        String cellPhoneNumber = txtCellPhoneNumber.getText();
        int length = cellPhoneNumber.length();
        char c = evt.getKeyChar();
        
        //Check for number between 0 to 9
        
        if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'){
            //check for length not more than 10
            if(length<10)
                txtCellPhoneNumber.setEditable(true);
            else 
            // not editable if length more than 10
            {
                txtCellPhoneNumber.setEditable(false);
                JOptionPane.showMessageDialog(this,"Enter valid contact number");    
            }
        }
        else
        {
            //now allow keys 'back space' and 'delete' for edit
            if(evt.getExtendedKeyCode() ==  KeyEvent.VK_BACK_SPACE|| evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                // than allow editable
                txtCellPhoneNumber.setEditable(true);
            }
            else
                txtCellPhoneNumber.setEditable(false);
            JOptionPane.showMessageDialog(this,"Enter valid contact number");
            txtAge.setText("");
    }//GEN-LAST:event_txtCellPhoneNumberKeyPressed
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpload;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellPhoneNumber;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmployeeId;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImageIcon;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPhoneNumber;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeId;
    private javax.swing.JTextField txtFileName;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables
}
